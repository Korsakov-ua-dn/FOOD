{"version":3,"sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,+EAA+E;;AAE/E,6DAA6D;;AAE7D;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA,aAAa,E;AACb,SAAS;;AAET;AACA;AACA,kDAAkD;AAClD,yEAAyE;AACzE,qDAAqD;AACrD;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA,iEAAe,IAAI,E;;;;;;;;;;;;;;;AC1F8B;;AAEjD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,2BAA2B,WAAW,OAAO,SAAS;AACtD,uDAAuD,cAAc;AACrE,gDAAgD,UAAU;AAC1D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;;AAEA,IAAI,+DAAW;AACf;AACA,2BAA2B,iCAAiC;AAC5D;AACA,aAAa;AACb,SAAS,EAAE;;AAEX;AACA;AACA,mCAAmC,iCAAiC;AACpE;AACA,gBAAgB;AAChB,YAAY,EAAE;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,KAAK,E;;;;;;;;;;;;;;;;ACpF0B;AACA;;AAE9C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;;AAIL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ,+CAA+C;AAC/C;AACA,4EAA4E;AAC5E;AACA;;;AAGA,gCAAgC;AAChC;AACA;AACA;AACA,gBAAgB;AAChB;AACA,YAAY;;AAEZ,QAAQ,4DAAQ;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,yBAAyB;AACzB,SAAS;;AAET;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA,QAAQ,iDAAS;;AAEjB;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,iEAAe,KAAK,E;;;;;;;;;;;;;;;;ACnHpB;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK,EAAE;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,iEAAe,KAAK,EAAC;AACF;;;;;;;;;;;;;;;ACnDnB,kBAAkB,qFAAqF;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,cAAc;AACjD,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC,WAAW;AACpD,YAAY;AACZ;AACA;AACA;;AAEA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;;AAER;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,KAAK;AACL;AACA;AACA;;AAEA,sDAAsD;AACtD,uCAAuC;AACvC;;AAEA,4CAA4C;;AAE5C;AACA,kCAAkC;AAClC,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,SAAS;AACT;AACA;AACA,qDAAqD,OAAO;;AAE5D;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qDAAqD,OAAO;;AAE5D;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA,yDAAyD,OAAO;;AAEhE;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA,sCAAsC,WAAW;AACjD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,MAAM,E;;;;;;;;;;;;;;ACnLrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK,EAAE;AACP;;AAEA,iEAAe,IAAI,E;;;;;;;;;;;;;;ACtCnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,IAAI;AAC3B,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,K;;AAEA;AACA;;AAEA,iEAAe,KAAK,E;;;;;;;;;;;;;;;ACnDpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK,EAAE;AACP;;AAEA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA,2CAA2C,IAAI,YAAY,WAAW;AACtE;AACA;AACA,EAAE;AACF;;AAEkB;;;;;;;UCtBlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACA;AACA;AACF;AACI;AACF;AACO;;AAE3C;AACA,0CAA0C,yDAAS,iCAAiC;;AAEpF,IAAI,sDAAI;AACR,IAAI,uDAAK;AACT,IAAI,uDAAK;AACT,IAAI,uDAAK;AACT,IAAI,sDAAI;AACR,IAAI,wDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP,IAAI,uDAAK;;AAET,CAAC,E","file":"bundle.js","sourcesContent":["function calc() {\r\n    // Calc\r\n    const result = document.querySelector('.calculating__result span'), // ячейка для записи результата\r\n          gender = document.querySelectorAll('#gender div'), // селектор пола\r\n          activity = document.querySelectorAll('.calculating__choose_big div'); // селектор физической активности\r\n\r\n    let sex = 'female', height, weight, age, ratio = '1.375'; // начальные параметры\r\n\r\n    if (localStorage.sex) {\r\n        sex = localStorage.sex;\r\n    }\r\n    if (localStorage.ratio) {\r\n        ratio = localStorage.ratio;\r\n    } // проверка хранилища на наличие ранее заполненых данных\r\n\r\n    function changeActiveClass (selector, key, value) {\r\n    selector.forEach( elem => {\r\n        elem.classList.remove('calculating__choose-item_active');\r\n        if (elem.getAttribute(key) === value) {\r\n            elem.classList.add('calculating__choose-item_active');\r\n        }\r\n    });\r\n    } // смена класса активности\r\n    changeActiveClass(activity, 'data-ratio', ratio);\r\n    changeActiveClass(gender, 'id', sex);\r\n\r\n    function calcTotal () {\r\n    if (!sex || !height || !weight || !age || !ratio) {\r\n        result.textContent = \"Заполните все поля\";\r\n        return; // прерываем выполнение функции далее\r\n    } // проверка заполнения всех полей формы\r\n\r\n    if (sex === 'male') {\r\n        result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n    } else {\r\n        result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n    }\r\n    }\r\n    calcTotal();\r\n\r\n    function getStaticInformation () {\r\n        activity.forEach(item => {\r\n            item.addEventListener('click', (e) => {\r\n                ratio = +e.target.getAttribute('data-ratio'); // значение атрибута присваиваем в переменную\r\n                localStorage.setItem('ratio', e.target.getAttribute('data-ratio'));\r\n                changeActiveClass(activity, 'data-ratio', e.target.getAttribute('data-ratio'));\r\n                calcTotal();\r\n            }); \r\n        });\r\n\r\n        gender.forEach(item => {\r\n            item.addEventListener('click', (e) => {\r\n                sex = e.target.getAttribute('id'); // значение атрибута присваиваем в переменную\r\n                localStorage.setItem(\"sex\", e.target.getAttribute('id')); // значение атрибута записываем в localstorege\r\n                changeActiveClass(gender, 'id', sex); // меняем класс активности\r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n    getStaticInformation();\r\n\r\n    function getDynamicInformation (selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = \"1px solid red\";\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch(input.getAttribute('id')) {\r\n                case \"height\":\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n            calcTotal();\r\n        });\r\n    }\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\nexport default calc;","import {getResource} from '../services/services';\r\n\r\nfunction cards() {\r\n\r\n    const menuItems = document.querySelectorAll('.menu__item');\r\n    menuItems.forEach(i => i.remove());\r\n\r\n    class menuItem {\r\n        constructor(image, alt, subtitle, text, price, parentSelector, ...classes) {\r\n            this.image = image;\r\n            this.alt = alt;\r\n            this.subtitle = subtitle;\r\n            this.text = text;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 29;\r\n            this.changeToUAH();//запустит метод и вернет готвое значение\r\n        }\r\n        changeToUAH() {\r\n        this.price = this.price * this.transfer;\r\n        }\r\n        render() {\r\n            const element = document.createElement('div');\r\n            if (this.classes.length === 0) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n            element.innerHTML = `\r\n                <img src=${this.image} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">Меню ${this.subtitle}</h3>\r\n                <div class=\"menu__item-descr\">${this.text}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    getResource('http://localhost:3000/menu') // запрос на сервер получает массив\r\n        .then(data => {\r\n            data.forEach(({img, altimg, title, descr, price}) => {\r\n                new menuItem(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        }); //деструктуризация объекта на отдельные свойства при помощи {}\r\n\r\n    // axios.get('http://localhost:3000/menu')\r\n    //     .then(data => {\r\n    //         data.data.forEach(({img, altimg, title, descr, price}) => {\r\n    //             new menuItem(img, altimg, title, descr, price, '.menu .container').render();\r\n    //         });\r\n    //     }); // обращаемся к получеенному объекту, берем только данные data внутри этого объекта\r\n\r\n    // new menuItem(\r\n    //     \"img/tabs/vegy.jpg\",\r\n    //     \"vegy\",\r\n    //     '\"Фитнес\"',\r\n    //     'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\r\n    //     9,\r\n    //     '.menu .container'\r\n    // ).render();\r\n    // new menuItem(\r\n    //     \"img/tabs/elite.jpg\",\r\n    //     \"elite\",\r\n    //     '“Премиум”',\r\n    //     'В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!',\r\n    //     20,\r\n    //     '.menu .container'\r\n    // ).render();\r\n    // new menuItem(\r\n    //     \"img/tabs/post.jpg\",\r\n    //     \"post\",\r\n    //     '\"Постное\"',\r\n    //     'Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков. ',\r\n    //     15,\r\n    //     '.menu .container'\r\n    // ).render();\r\n}\r\n\r\nexport default cards;","import {closeModal, openModal} from './modal';\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n\r\n    const forms = document.querySelectorAll(formSelector);\r\n\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    forms.forEach(item => {\r\n    bindPostData(item);\r\n    });\r\n\r\n    \r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n            display: block;\r\n            margin: 0 auto;\r\n            `;\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            \r\n\r\n        //  const request = new XMLHttpRequest();\r\n        //  request.open('POST', 'server.php');\r\n            \r\n        //  request.setRequestHeader('Content-type', 'application/json');\r\n            /*в связке XMLHttpRequest и form-data заголовок setRequestHeader устанавливать не нужно */\r\n            const formData = new FormData(form);\r\n        //  request.send(formData);\r\n        \r\n        // const object = {};\r\n        // formData.forEach(function(value, key) {\r\n        //     object[key] = value;\r\n        // });\r\n        // const json = JSON.stringify(object);// трансформация FormData в JSON формат\r\n        // То же самое более элегатно\r\n        const json = JSON.stringify(Object.fromEntries(formData.entries())); /* Сперва\r\n        берем formData превращаем в массив-массивов а затем превращаем ее в классический объект\r\n        следом классический объект превращаем в json */\r\n        \r\n\r\n        // fetch('server.php', { // куда отправляем\r\n        //     method: \"POST\", // каким образом\r\n        //     headers: {\r\n        //        'Content-type': 'application/json'\r\n        //     },\r\n        //     body: JSON.stringify(object) // что именно\r\n        // })\r\n\r\n        postData('http://localhost:3000/requests', json)\r\n        // .then(data => data.text())\r\n        .then(data => {\r\n            console.log(data);\r\n            showThanksModal(message.success);\r\n            statusMessage.remove();\r\n        }).catch(() => {\r\n            showThanksModal(message.failure);\r\n        }).finally(() =>{\r\n            form.reset();// очистил форму после отправки\r\n        });\r\n        \r\n        //  request.addEventListener('load', () => {\r\n        //      if (request.status === 200) {\r\n        //          console.log(request.response);\r\n        //          showThanksModal(message.success);\r\n        //          form.reset();// очистил форму после отправки\r\n        //          statusMessage.remove();\r\n        //      } else {\r\n        //         showThanksModal(message.failure);\r\n        //      }\r\n        //  });\r\n        });\r\n    } /* для того чтоб сервер смог получить данные у инпута или др. интерактивной части\r\n    верстки должен быть прописан атрибут name\r\n    Для того что бы изменения отработали на локальном сервере необходимо сбросить кэш\r\n    в браузере на виндовс sift+F5 */\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n        prevModalDialog.style.display = 'none';\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n        <div class=\"modal__content\">\r\n            <div class=\"modal__close data-close\">×</div>\r\n            <div class=\"modal__title\">${message}</div>\r\n        </div>\r\n        `;\r\n        document.querySelector('.modal').append(thanksModal);\r\n        openModal('.modal', modalTimerId);\r\n\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.style.display = 'block';\r\n            closeModal('.modal');\r\n        }, 4000);\r\n    }\r\n\r\n// fetch('http://localhost:3000/menu')\r\n//     .then(data => data.json())\r\n//     .then(res => console.log(res));\r\n}\r\n\r\nexport default forms;","function openModal(modalSelector, modalTimerId) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.style.display = 'block';\r\n    document.body.style.overflow = 'hidden'; // блокирует прокрутку страницы\r\n    console.log(modalTimerId);\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId);// если пользователь сам открыл модалку очистить интервал\r\n    }\r\n}\r\n\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.style.display = 'none';\r\n    document.body.style.overflow = '';\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n\r\n    const modalTrigger = document.querySelectorAll(triggerSelector),\r\n          modal = document.querySelector(modalSelector);\r\n\r\n    modalTrigger.forEach((btn) =>{\r\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n    });/* когда передаем колбэк фунцию в обработчик события ее нельзя сразу вызывать, ее нужно только объявить,\r\n     поэтому openModal надо обернкть в стрелочную функцию */\r\n    \r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n    /* закрытие модалки кликом на пустом экране и на крестик такая конструкция будет работать \r\n    с динамически сформированной версткой */\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if(e.code === \"Escape\" && modal.style.display == 'block') {\r\n            closeModal(modalSelector);\r\n        }\r\n    }); /* закрыть модальное окно кнопкой escape, вызывать данное действие \r\n    только если модальное окно активно*/\r\n\r\n    function showModalByScroll() {\r\n        if(window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal(modalSelector, modalTimerId);\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    } // всплытие модалки при скролле до конца страницы, работает единожды\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nexport default modal;\r\nexport {openModal};\r\nexport {closeModal};","function slider ({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n    // деструктуризация объекта переданного как аргумет в slider\r\n    const slides = document.querySelectorAll(slide),\r\n          slider = document.querySelector(container),\r\n          prev = document.querySelector(prevArrow),\r\n          next = document.querySelector(nextArrow),\r\n          total = document.querySelector(totalCounter),\r\n          slidesWrapper = document.querySelector(wrapper),\r\n          slidesField = document.querySelector(field),\r\n          width = window.getComputedStyle(slidesWrapper).width; // получаем ширину окна просмотра слайдов\r\n    let slideIndex = 1;\r\n    let current = document.querySelector(currentCounter);\r\n    let offset = 0;\r\n\r\n    // showSlides(slideIndex);\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    // } else {\r\n    //     total.textContent = slides.length;\r\n    // }\r\n\r\n    // function showSlides(n) {\r\n    //     if (n > slides.length) {\r\n    //         slideIndex = 1;\r\n    //     }\r\n\r\n    //     if (n < 1) {\r\n    //         slideIndex = slides.length;\r\n    //     }\r\n\r\n    //     slides.forEach(item => item.style.display = 'none');\r\n    //     slides[slideIndex - 1].style.display = 'block';\r\n\r\n        // if (slideIndex < 10) {\r\n        //     current.textContent = `0${slideIndex}`;\r\n        // } else {\r\n        //     current.textContent = slideIndex;\r\n        // }\r\n    // }\r\n\r\n    // function plusSlides (n) {\r\n    //     showSlides(slideIndex += n); // прибавить и присвоить новое значение переменной\r\n    // }\r\n    // prev.addEventListener('click', () => {\r\n    //     plusSlides(-1);\r\n    // });\r\n    // next.addEventListener('click', () => {\r\n    //     plusSlides(1);\r\n    // });\r\n\r\n    // Slider 2\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = slides.length*100 + '%';//ед. изм % т.к. стили css, поле слайдов равно 400% родителя\r\n    slidesField.style.display = 'flex'; // Все слайды были блочными стали в одну линию\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    slidesWrapper.style.overflow = 'hidden'; // скрываем все элементы кот. не попали в область видимости обертки\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width; // сделаем все слайды одинаковой ширины\r\n    });\r\n\r\n    slider.style.position = 'relative';\r\n    const indicators = document.createElement('ol'),\r\n        dots = [];\r\n    \r\n    indicators.classList.add('carousel-indicators');\r\n    indicators.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot); // пушить все точки в массив\r\n    }\r\n\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        if (offset == deleteNotDigits(width) * (slides.length - 1)) {\r\n            offset = 0;// т.к. первый слайд уже отображен -1\r\n        } else {\r\n            offset += deleteNotDigits(width);\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        changeCurrent();\r\n        changeDots();\r\n    });// т.к. переменая width содержит строку '650px' то нужно отрезать последние два символа и превратить в число\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {\r\n            offset = deleteNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        changeCurrent();\r\n        changeDots();\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n            slideIndex = slideTo;\r\n            offset = deleteNotDigits(width) * (slideTo - 1);\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            changeCurrent();\r\n            changeDots();\r\n        });\r\n    });\r\n\r\n    function changeCurrent () {\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n    }\r\n    function changeDots () {\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    }\r\n}\r\n\r\nexport default slider;","function tabs (tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n    // Tabs\r\n    const tabs = document.querySelectorAll(tabsSelector),\r\n          tabsContent = document.querySelectorAll(tabsContentSelector),\r\n          tabsParent = document.querySelector(tabsParentSelector);\r\n    \r\n    function hideTabContent () {\r\n        tabsContent.forEach(item => {\r\n            item.style.display = 'none';\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove(activeClass);\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {\r\n        tabsContent[i].style.display = 'block';\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target;\r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    }); //необходимо получить 'tabheader__item' без точки\r\n}\r\n\r\nexport default tabs;","function timer(id, deadline) {\r\n    \r\n    function getTimeRemaining(endtime) {\r\n        const t = Date.parse(endtime) - Date.parse(new Date()),\r\n              days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n              hours = Math.floor((t / (1000 * 60 * 60) % 24)), // оператор % делит и возвращает остаток от деления\r\n              minutes = Math.floor((t / 1000 / 60) % 60),\r\n              seconds = Math.floor((t / 1000) % 60);\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector('#days'),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),\r\n              timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock(); // запуск чтоб избежать отображения времени из верстки\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if   (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    } \r\n\r\n    setClock(id, deadline);\r\n}\r\n\r\nexport default timer;","const postData = async (url, data) => {\r\n    const res = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: data\r\n    }); /* т.к. внутри функции асинхронный код необходимо дождаться ответ сервера\r\n    только потом присвоить значение в переменную res - используем  в паре async await */\r\n\r\n    return await res.json(); // возвращает промис который можно дальше обработать\r\n};\r\n\r\nconst getResource = async (url) => {\r\n    const res = await fetch(url);\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n    return await res.json();\r\n}; /* свойство \".ok\" - говорит о том что мы что-то получили и все в порядке\r\n    свойство \".status\" - статус котор вернул сервер (200, 404 и т.д.) */\r\n\r\nexport {postData};\r\nexport {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport timer from './modules/timer';\r\nimport cards from './modules/cards';\r\nimport calc from './modules/calc';\r\nimport slider from './modules/slider';\r\nimport forms from './modules/forms'; // порядок подключения не важен\r\nimport  {openModal} from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000);// автоматическое всплытие модалки\r\n    \r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    modal('[data-modal]', '.modal', modalTimerId);\r\n    timer('.timer', '2021-03-20');\r\n    cards();\r\n    calc();\r\n    slider({\r\n        container: '.offer__slider',\r\n        slide: '.offer__slide',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider__inner'\r\n    }); // благодаря деструктуризации данные можно  передавать в любом порядке\r\n    forms('form', modalTimerId);\r\n\r\n});"],"sourceRoot":""}